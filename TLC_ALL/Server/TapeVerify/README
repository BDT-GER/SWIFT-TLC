Tape Verification Tool

This tool will check an LTFS formatted tape for corrupt blocks using
the VERIFY6 SCSI command.
This is only a proof-of-concept tool!

Preconditions:
	- Tape must be loaded to the drive before starting the tool
	- LTFS index of the tape must be consistent so tape can be mounted
	- If LTFS index is not consistent, try to use ltfschk to check the
	  tape


Build instructions:

The tool depends on the following libraries:
	- libsgutils2 (http://sg.danny.cz/sg/sg3_utils.html)
	- libltfs (LTFS library provided by any LTFS implementation)
	- libfuse

For HP package, the tool was built using the HP StoreOpen Standalone version of LTFS.
For IBM package, the tool was built with ibm-ltfssde-2.2.0.2 version.

Make file for IBM is Makefile.IBM, make file for HP is Makefile.HP.
Use "build.sh IBM" to build the tool for IBM and "build.sh HP" to build the tool for HP.
 
Use "make CFLAGS=-DSIMULATE_BAD_BLOCKS" to enable a define that will
simulate bad blocks on the tape.

Use "make CFLAGS=-DQUICK_TEST" to enable a define to stop the
verification process after the first 10000 blocks on tape.

Both options can be combined like this:
make CFLAGS="-DSIMULATE_BAD_BLOCKS -DQUICK_TEST"

Currently the tool will simulate one bad block after each 123456 blocks.
If the QICK_TEST mode is activated, the tool will simulate a bad block
after each 1234 blocks.

Start the tool using
./TapeVerifyTool -f <path to tape drive> [ -b <bad blocks> -q <quick check> ]

Example:
./TapeVerifyTool -f /dev/nst0
This will start the tool without any simulation of bad blocks

./TapeVerifyTool -f /dev/nst0 -b 100000
This will start the tool and will simulate a bad block each 100000 blocks

./TapeVerifyTool -f /dev/nst0 -b 10000 -q 100000
This will start the tool and will simulate a bad block each 10000 blocks
and will additionally stop the check aftter 100000 blocks

Technical information:

First of all, the tool uses the LTFS library to get the block size used
when the tape has been formatted as LTFS volume.
The tool will then position the tape to the first block of the data
partition.

VERIFY6 CDBs are then used to check the blocks on the tape (the block
size determined as first step is part of this CDB).

The tool will ignore CHECK CONDITIONS with illegal length condition
(ILI) bit set because this condition occurs whenever a block on the
tape was not completely filled with data.
The tool will ignore CHECK CONDITIONS with file mark encountered (FM)
bit set as well, because file marks are used by the LTFS file system.

The VERIFY6 CDBs are used to scan the complete tape until EOD is
detected.

Whenever any other CHECK CONDITION besides ILI or FM is encountered,
the logical position on the tape is recorded and printed.

When the scan of the tape is complete, the LTFS library functionality
is used to scan the index for all files that are stored on the corrupt
blocks.
To do this lookup of possibly corrupt files, the index of the LTFS
volume must be valid and the LTFS volume must be in such a condition
that the internal LTFS mount command succeeds.

All files stored on the possibly corrupt block(s) are printed as a
final step.


Notes:

The data statistics about how much data has been verified approximate
values only.
The calculation currently assumes that all blocks on the tape are
filled up to 65% of their size.
I.e. the actual verification speed will most likely not accurate if
MB/s is considered.
The tool can only reliably tell how many blocks on the tape have been
verified.
