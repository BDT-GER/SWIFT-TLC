#!/bin/bash
RED="\e[0;31m"
NOR="\e[0;0m"
GREEN="\e[0;32m"
YELLOW="\e[0;33m"
CYAN="\e[0;36m"
TOTAL_INSTALL_LOG_PATH=${1}-`date +%Y_%m_%d-%H:%M:%S`.log
pkgVer=$2
function logMsg()
{
    #$1 Log Type: INFO | SUCCESS | FAILURE | LOGONLY
    #$2 Log Message
    #$3 keyword string to highlight
    #Usage: logMsg suc "Samba Service is running" "Samba"
    case $1 in
        INFO|info)
        msgHeadCol=$GREEN
        logType="[INFO]"
        msgBodyCol=$NOR
    ;;
        IGNORE|ignore)
        msgHeadCol=$GREEN
        logType="[IGNORE]"
        msgBodyCol=$NOR
    ;;
        SUCCESS|success|suc)
        msgHeadCol=$GREEN
        logType="[SUCCESS]"
        msgBodyCol=$GREEN
    ;;
        FAILURE|failure|fail)
        msgHeadCol=$RED
        logType="[FAILURE]"
        msgBodyCol=$RED
    ;;
        WARNING|warning|warn)
        msgHeadCol=$RED
        logType="[WARNING]"
        msgBodyCol=$NOR
    ;;
        QUESTION|question|ques)
        msgHeadCol=$CYAN
        logType="[QUESTION]"
        msgBodyCol=$NOR
    ;;
        LOGONLY|logonly|log)
        msgHeadCol=$GREEN
        logType="[LOGONLY]"
        msgBodyCol=$NOR
    esac
        msg=$2
        if [ "$3" ]; then
                msg=${2/$3/"$YELLOW'$3'$msgBodyCol"}
        fi
	if [ "$4" == "n" ];then
	    echoOpt="-ne"
	else
	    echoOpt="-e"
	fi
	if [ ! -z $TOTAL_INSTALL_LOG_PATH ];then
            if [ $logType = "[LOGONLY]" ];then
                echo `date` - $logType: $2 >> $TOTAL_INSTALL_LOG_PATH
            else
                echo "$echoOpt" "${msgHeadCol}${logType}${msgBodyCol} $msg $NOR" && echo `date` - $logType: $2 >> $TOTAL_INSTALL_LOG_PATH
            fi
	else
	    echo "$echoOpt" "${msgHeadCol}${logType}${msgBodyCol} $msg $NOR"	
	fi
        if [ $logType = "[FAILURE]" ];then
		if [ ! -z $pkgVer ];then
	            echo -e "Package Version: ${YELLOW}${pkgVer}${NOR}"
		fi
                exit 1
        fi
}

function _chkOptExists(){
    # $1 = Config File Name
    # $2 = Option Name
    if [ ! -e ${1} ];then
	logMsg fail "${1} is not exists! Please verify if the package is complete."
    fi
    _cnt=`cat -v ${1} | grep "^ *\${2} *="`
    _optExist=$?
    if [ ${_optExist} -eq 0 ];then
        logMsg logonly "Option ${2} exists in configure file ${1}"
    else
        logMsg logonly "Option ${2} not exists in configure file ${1}"
	return 1
    fi
}

function getOptLine(){
     # $1 Configuration File Name
     # $2 Option Name
    _chkOptExists $1 $2
    if [ $? -eq 0 ];then
        _line=`sed -n "/${_cnt}/=" version`
    fi
}

function addNewOption(){
    logMsg logonly "Adding new option ${2} with value ${3} in file ${1}."
    echo "${2}=${3}" >> $1
}

function rmOpt(){
     # $1 Configuration File Name
     # $2 Option Name

    getOptLine $1 $2
    if [ ! -z ${_line} ];then
        sed -i "${_line}d" $1
    else
        logMsg logonly "Option ${2} not exists."
    fi
}

function getOptVal(){
    _chkOptExists $1 $2
    if [ ! -z ${_cnt} ];then
        optVal=`echo ${_cnt} | awk '{print$3}'`
    fi
}

function setOpt(){
    # $1 = Config File Name
    # $2 = Option Name
    # $3 = Option Value
    getOptLine $1 $2
    if [ ! -z ${_line} ];then
	logMsg logonly "Updating ${2} in configure file ${1}."
        sed -i "${_line}s/^.*$/${2}\=${3}/" $1
    else
	addNewOption ${1} ${2} ${3}
    fi
}

